import ROOT
from helpers import makeHist
from trackHists import TrackHists
from array import array


class JetHists:

    def __init__(self,name, outFile, light=False):
        
        self.name = name
        self.thisDir = outFile.mkdir(self.name)
        self.pt   = makeHist(self.thisDir, "pt",  "pt  ;P_{T} [GeV];Entries",  100,0, 400)
        self.pt_l = makeHist(self.thisDir, "pt_l","pt_l;P_{T} [GeV];Entries",  100,0,1000)
        self.eta  = makeHist(self.thisDir, "eta","eta;jet #eta;Entries",100,-3,3)
        self.phi  = makeHist(self.thisDir, "phi","phi;jet #phi;Entries",100,-3.2,3.2)
        self.mass = makeHist(self.thisDir, "mass","mass;jet mass [GeV];Entries",100,-1,200)
        self.deepcsv = makeHist(self.thisDir, "deepcsv","deepcsv;deepcsv;Entries",200,0,1)

        self.light = light
        if not self.light:
            self.matched_dPt      = makeHist(self.thisDir, "matched_dPt",     "matched_dPt     ;P_{T}-P_{T}^{matched} [GeV];Entries",  100,-50, 50)
            self.matched_dEta     = makeHist(self.thisDir, "matched_dEta",    "matched_dEta    ;#eta-#eta^{matched};Entries",100,-0.5,0.5)
            self.matched_dPhi     = makeHist(self.thisDir, "matched_dPhi",    "matched_dPhi    ;#phi-#phi^{matched};Entries",100,-0.5,0.5)
            self.matched_dR       = makeHist(self.thisDir, "matched_dR",      "matched_dR      ;#DeltaR(Online,Offline);Entries",45, 0,0.45)
            self.matched_dMass    = makeHist(self.thisDir, "matched_dMass",   "matched_dMass   ;mass-mass^{matched} [GeV];Entries",100,-50,50)
            self.matched_dDeepcsv = makeHist(self.thisDir, "matched_dDeepcsv","matched_dDeepcsv;DeepCSV-DeepCSV^{matched};Entries",100,-1,1)

            self.deepcsv_matched = makeHist(self.thisDir, "deepcsv_matched","deepcsv;deepcsv;Entries",200,0,1)
            self.deepcsv_vs_matched_deepcsv = ROOT.TH2F("deepcsv_vs_matched_deepcsv",  "Events;DeepCSV;Matched DeepCSV",100,-1,1,100,-1,1)
            self.deepcsv_vs_matched_deepcsv.SetDirectory(self.thisDir)    

            self.deepcsv_bb = makeHist(self.thisDir, "deepcsv_bb","deepcsv_bb;deepcsv_bb;Entries",100,-2,2)
    
            self.vertexNTracks                    = makeHist(self.thisDir, 'vertexNTracks'                ,'vertexNTracks;nVertex Tracks;Entries'                 ,22, -2.5, 19.5)
            self.vertexMass                       = makeHist(self.thisDir, 'vertexMass'                   ,'vertexMass;Vertex Mass [GeV]'                    ,100, -0.5, 50)
            self.vertexJetDeltaR                  = makeHist(self.thisDir, 'vertexJetDeltaR'              ,'vertexJetDeltaR;Vertex-Jet #Delta R'               ,100, -0.01, 0.4)
            self.vertexFitProb                    = makeHist(self.thisDir, 'vertexFitProb'                ,'vertexFitProb;Vertex Fit Prob'                 ,100, -50, 50)
            self.vertexEnergyRatio                = makeHist(self.thisDir, 'vertexEnergyRatio'            ,'vertexEnergyRatio;Vertex Energy Fraction '             ,100, -0.1, 3)
            self.vertexCategory                   = makeHist(self.thisDir, 'vertexCategory'               ,'vertexCategory;Vertex Category'                ,4 ,-1.5,2.5)
            self.vertexBoostOverSqrtJetPt         = makeHist(self.thisDir, 'vertexBoostOverSqrtJetPt'     ,'vertexBoostOverSqrtJetPt;Vertex Boost/#sqrt{jet P_{T}}'      ,100, -0.1, 1.1)
            self.trackJetPt                       = makeHist(self.thisDir, 'trackJetPt'           ,'trackJetPt;Track Jet P_{T} [GeV]'            ,100, 0,400)
            self.trackSumJetEtRatio               = makeHist(self.thisDir, 'trackSumJetEtRatio'           ,'trackSumJetEtRatio;Track-jet/Jet E_{T} Ratio'            ,100, -0.1,1.5)
            self.trackSumJetDeltaR                = makeHist(self.thisDir, 'trackSumJetDeltaR'            ,'trackSumJetDeltaR; Track-Jet - Jet #Delta R'             ,100, -0.1, 0.35)
            self.trackSip2dValAboveCharm          = makeHist(self.thisDir, 'trackSip2dValAboveCharm'      ,'trackSip2dValAboveCharm;trackSip2dValAboveCharm'       ,100, -0.2, 0.2)
            self.trackSip2dSigAboveCharm          = makeHist(self.thisDir, 'trackSip2dSigAboveCharm'      ,'trackSip3dSigAboveCharm;trackSip2SiglAboveCharm'       ,100, -50, 50)
            self.trackSip3dValAboveCharm          = makeHist(self.thisDir, 'trackSip3dValAboveCharm'      ,'trackSip3dValAboveCharm;trackSip3dValAboveCharm'       ,100, -0.2, 0.2) 
            self.trackSip3dSigAboveCharm          = makeHist(self.thisDir, 'trackSip3dSigAboveCharm'      ,'trackSip3dSigAboveCharm;trackSip3dSigAboveCharm'       ,100, -50, 50)
            self.totalMultiplicity                = makeHist(self.thisDir, 'totalMultiplicity'            ,'totalMultiplicity;total multiplicity'             ,62, -1.5, 60.5)
            self.photonMultiplicity               = makeHist(self.thisDir, 'photonMultiplicity'           ,'photonMultiplicity;photon multiplicity'            ,42, -1.5, 40.5)
            self.photonEnergyFraction             = makeHist(self.thisDir, 'photonEnergyFraction'         ,'photonEnergyFraction;photon energy fraction'          ,100, -0.1,1.5)
            self.neutralHadronMultiplicity        = makeHist(self.thisDir, 'neutralHadronMultiplicity'    ,'neutralHadronMultiplicity;neutralHadronMultiplicity'     ,22, -1.5, 20.5)
            self.neutralHadronEnergyFraction      = makeHist(self.thisDir, 'neutralHadronEnergyFraction'  ,'neutralHadronEnergyFraction;neutralHadronEnergyFraction'   ,100, -0.1,1.5)
            self.neMult                           = makeHist(self.thisDir, 'neMult'                       ,'neMult;neMult'                        ,62, -1.5, 60.5)
            self.neHadEF                          = makeHist(self.thisDir, 'neHadEF'                      ,'neHadEF;neHadEF'                       ,100, -0.1,2.5)
            self.neEmEF                           = makeHist(self.thisDir, 'neEmEF'                       ,'neEmEF;neEmEF'                        ,100, -0.1,2.5)
            self.muonMultiplicity                 = makeHist(self.thisDir, 'muonMultiplicity'             ,'muonMultiplicity;muonMultiplicity'              ,12, -1.5, 10.5)
            self.muonEnergyFraction               = makeHist(self.thisDir, 'muonEnergyFraction'           ,'muonEnergyFraction;muonEnergyFraction'            ,100, -0.1,1.5)
            self.mult                             = makeHist(self.thisDir, 'mult'                         ,'mult;mult'                          ,62, -1.5, 60.5)
            self.muEF                             = makeHist(self.thisDir, 'muEF'                         ,'muEF;muEF'                          ,100, -0.1,2.5)
            self.massVertexEnergyFraction         = makeHist(self.thisDir, 'massVertexEnergyFraction'     ,'massVertexEnergyFraction;massVertexEnergyFraction'      ,100, -0.1,2.5)
            self.jetNTracksEtaRel                 = makeHist(self.thisDir, 'jetNTracksEtaRel'             ,'jetNTracksEtaRel;jetNTracksEtaRel'              ,22, -1.5, 20.5)
            self.jetNTracks                       = makeHist(self.thisDir, 'jetNTracks'                   ,'jetNTracks;Number Tracks'                    ,42, -1.5, 40.5)
            self.jetNSelectedTracks               = makeHist(self.thisDir, 'jetNSelectedTracks'           ,'jetNSelectedTracks;Number Selected Tracks'            ,42, -1.5, 40.5)
            self.jetNSecondaryVertices            = makeHist(self.thisDir, 'jetNSecondaryVertices'        ,'jetNSecondaryVertices;Number Secondary Vertices'         ,12, -1.5, 10.5)
            self.hadronPhotonMultiplicity         = makeHist(self.thisDir, 'hadronPhotonMultiplicity'     ,'hadronPhotonMultiplicity;hadronPhotonMultiplicity'      ,62, -1.5, 60.5)
            self.hadronMultiplicity               = makeHist(self.thisDir, 'hadronMultiplicity'           ,'hadronMultiplicity;hadronMultiplicity'            ,42, -1.5, 40.5)
            self.flightDistance1dSig              = makeHist(self.thisDir, 'flightDistance1dSig'          ,'flightDistance1dSig;flightDistance1dSig'           ,100, -10, 150)
            self.flightDistance1dVal              = makeHist(self.thisDir, 'flightDistance1dVal'          ,'flightDistance1dVal;flightDistance1dVal'           ,100, -0.1, 5)
            self.flightDistance2dSig              = makeHist(self.thisDir, 'flightDistance2dSig'          ,'flightDistance2dSig;flightDistance2dSig'           ,100, -10, 150)
            self.flightDistance2dVal              = makeHist(self.thisDir, 'flightDistance2dVal'          ,'flightDistance2dVal;flightDistance2dVal'           ,100, -0.1, 5)
            self.flightDistance3dSig              = makeHist(self.thisDir, 'flightDistance3dSig'          ,'flightDistance3dSig;flightDistance3dSig'           ,100, -10, 150)
            self.flightDistance3dVal              = makeHist(self.thisDir, 'flightDistance3dVal'          ,'flightDistance3dVal;flightDistance3dVal'           ,100, -0.1, 5)
            self.chargedHadronMultiplicity        = makeHist(self.thisDir, 'chargedHadronMultiplicity'    ,'chargedHadronMultiplicity;chargedHadronMultiplicity'     ,42, -1.5, 40.5)
            self.chargedHadronEnergyFraction      = makeHist(self.thisDir, 'chargedHadronEnergyFraction'  ,'chargedHadronEnergyFraction;chargedHadronEnergyFraction'   ,100, -0.1,1.5)
            self.chMult                           = makeHist(self.thisDir, 'chMult'                       ,'chMult;chMult'                        ,42, -1.5, 40.5)
            self.chHadEF                          = makeHist(self.thisDir, 'chHadEF'                      ,'chHadEF;chHadEF;Entries'                       ,100, -0.1,2.5)
            self.chEmEF                           = makeHist(self.thisDir, 'chEmEF'                       ,'chEmEF;chEmEF;Entries'                        ,100, -0.1,2.5)
            self.partonFlavour                    = makeHist(self.thisDir, 'partonFlavour'                ,'partonFlavour;partonFlavour;Entries'                        ,60, -30.5,29.5)
            self.hadronFlavour                    = makeHist(self.thisDir, 'hadronFlavour'                ,'hadronFlavour;hadronFlavour;Entries'                        ,60, -30.5,29.5)

            self.nTrk = makeHist(self.thisDir, "nTrk","nTrk;nTracks;Entries",42,-1.5,40.5)
            self.trackHists                 = TrackHists(name, self.thisDir)
    
        
    def Fill(self,jetInfo):
        self.pt  .Fill(jetInfo.pt)
        self.pt_l.Fill(jetInfo.pt)
        self.eta .Fill(jetInfo.eta)
        self.phi .Fill(jetInfo.phi)
        self.mass.Fill(jetInfo.mass)
        self.deepcsv.Fill(jetInfo.deepcsv)

        if not self.light:
            if jetInfo.matchedJet:
                self.matched_dPt  .Fill(jetInfo.pt - jetInfo.matchedJet.pt)
                self.matched_dEta .Fill(jetInfo.eta - jetInfo.matchedJet.eta)
                self.matched_dPhi .Fill(jetInfo.phi - jetInfo.matchedJet.phi)
                self.matched_dR   .Fill(jetInfo.vec.DeltaR(jetInfo.matchedJet.vec))
                self.matched_dMass.Fill(jetInfo.mass - jetInfo.matchedJet.mass)
                self.matched_dDeepcsv.Fill(jetInfo.deepcsv - jetInfo.matchedJet.deepcsv)

                self.deepcsv_matched.Fill(jetInfo.matchedJet.deepcsv)
                self.deepcsv_vs_matched_deepcsv.Fill(jetInfo.deepcsv, jetInfo.matchedJet.deepcsv)

            self.deepcsv_bb.Fill(jetInfo.deepcsv_bb)
    
    
            self.vertexNTracks                    .Fill(jetInfo.vertexNTracks                    )
            self.vertexMass                       .Fill(jetInfo.vertexMass                       )
            self.vertexJetDeltaR                  .Fill(jetInfo.vertexJetDeltaR                  )
            self.vertexFitProb                    .Fill(jetInfo.vertexFitProb                    )
            self.vertexEnergyRatio                .Fill(jetInfo.vertexEnergyRatio                )
            self.vertexCategory                   .Fill(jetInfo.vertexCategory                   )
            self.vertexBoostOverSqrtJetPt         .Fill(jetInfo.vertexBoostOverSqrtJetPt         )
            self.trackJetPt                       .Fill(jetInfo.trackJetPt               )
            self.trackSumJetEtRatio               .Fill(jetInfo.trackSumJetEtRatio               )
            if jetInfo.jetNSelectedTracks > 0:
                self.trackSumJetDeltaR                .Fill(jetInfo.trackSumJetDeltaR                )
            self.trackSip2dValAboveCharm          .Fill(jetInfo.trackSip2dValAboveCharm          )
            self.trackSip2dSigAboveCharm          .Fill(jetInfo.trackSip2dSigAboveCharm          )
            self.trackSip3dValAboveCharm          .Fill(jetInfo.trackSip3dValAboveCharm          )
            self.trackSip3dSigAboveCharm          .Fill(jetInfo.trackSip3dSigAboveCharm          )
            self.totalMultiplicity                .Fill(jetInfo.totalMultiplicity                )
            self.photonMultiplicity               .Fill(jetInfo.photonMultiplicity               )
            self.photonEnergyFraction             .Fill(jetInfo.photonEnergyFraction             )
            self.neutralHadronMultiplicity        .Fill(jetInfo.neutralHadronMultiplicity        )
            self.neutralHadronEnergyFraction      .Fill(jetInfo.neutralHadronEnergyFraction      )
            self.neMult                           .Fill(jetInfo.neMult                           )
            self.neHadEF                          .Fill(jetInfo.neHadEF                          )
            self.neEmEF                           .Fill(jetInfo.neEmEF                           )
            self.muonMultiplicity                 .Fill(jetInfo.muonMultiplicity                 )
            self.muonEnergyFraction               .Fill(jetInfo.muonEnergyFraction               )
            self.mult                             .Fill(jetInfo.mult                             )
            self.muEF                             .Fill(jetInfo.muEF                             )
            self.massVertexEnergyFraction         .Fill(jetInfo.massVertexEnergyFraction         )
            self.jetNTracksEtaRel                 .Fill(jetInfo.jetNTracksEtaRel                 )
            self.jetNTracks                       .Fill(jetInfo.jetNTracks                       )
            self.jetNSelectedTracks               .Fill(jetInfo.jetNSelectedTracks               )
            self.jetNSecondaryVertices            .Fill(jetInfo.jetNSecondaryVertices            )
            self.hadronPhotonMultiplicity         .Fill(jetInfo.hadronPhotonMultiplicity         )
            self.hadronMultiplicity               .Fill(jetInfo.hadronMultiplicity               )
            self.flightDistance1dSig              .Fill(jetInfo.flightDistance1dSig              )
            self.flightDistance1dVal              .Fill(jetInfo.flightDistance1dVal              )
            self.flightDistance2dSig              .Fill(jetInfo.flightDistance2dSig              )
            self.flightDistance2dVal              .Fill(jetInfo.flightDistance2dVal              )
            self.flightDistance3dSig              .Fill(jetInfo.flightDistance3dSig              )
            self.flightDistance3dVal              .Fill(jetInfo.flightDistance3dVal              )
            self.chargedHadronMultiplicity        .Fill(jetInfo.chargedHadronMultiplicity        )
            self.chargedHadronEnergyFraction      .Fill(jetInfo.chargedHadronEnergyFraction      )
            self.chMult                           .Fill(jetInfo.chMult                           )
            self.chHadEF                          .Fill(jetInfo.chHadEF                          )
            self.chEmEF                           .Fill(jetInfo.chEmEF                           )
            self.partonFlavour                    .Fill(jetInfo.partonFlavour                           )
            self.hadronFlavour                    .Fill(jetInfo.hadronFlavour                           )
    
            nTracks = len(jetInfo.tracks)
            self.nTrk.Fill(nTracks)
            for track in jetInfo.tracks:
                self.trackHists.Fill(track)


    def Write(self,outFile):
        self.thisDir.cd()
        self.pt  .Write()
        self.pt_l.Write()
        self.eta .Write()
        self.phi .Write()
        self.mass.Write()
        self.deepcsv.Write()
        if not self.light:
            self.matched_dPt  .Write()
            self.matched_dEta .Write()
            self.matched_dPhi .Write()
            self.matched_dR   .Write()
            self.matched_dMass.Write()
            self.matched_dDeepcsv.Write()

            self.deepcsv_matched.Write()
            self.deepcsv_vs_matched_deepcsv.Write()

            self.deepcsv_bb.Write()
    
            self.vertexNTracks                    .Write()
            self.vertexMass                       .Write()
            self.vertexJetDeltaR                  .Write()
            self.vertexFitProb                    .Write()
            self.vertexEnergyRatio                .Write()
            self.vertexCategory                   .Write()
            self.vertexBoostOverSqrtJetPt         .Write()
            self.trackJetPt               .Write()
            self.trackSumJetEtRatio               .Write()
            self.trackSumJetDeltaR                .Write()
            self.trackSip2dValAboveCharm          .Write()
            self.trackSip2dSigAboveCharm          .Write()
            self.trackSip3dValAboveCharm          .Write()
            self.trackSip3dSigAboveCharm          .Write()
            self.totalMultiplicity                .Write()
            self.photonMultiplicity               .Write()
            self.photonEnergyFraction             .Write()
            self.neutralHadronMultiplicity        .Write()
            self.neutralHadronEnergyFraction      .Write()
            self.neMult                           .Write()
            self.neHadEF                          .Write()
            self.neEmEF                           .Write()
            self.muonMultiplicity                 .Write()
            self.muonEnergyFraction               .Write()
            self.mult                             .Write()
            self.muEF                             .Write()
            self.massVertexEnergyFraction         .Write()
            self.jetNTracksEtaRel                 .Write()
            self.jetNTracks                       .Write()
            self.jetNSelectedTracks               .Write()
            self.jetNSecondaryVertices            .Write()
            self.hadronPhotonMultiplicity         .Write()
            self.hadronMultiplicity               .Write()
            self.flightDistance1dSig              .Write()
            self.flightDistance1dVal              .Write()
            self.flightDistance2dSig              .Write()
            self.flightDistance2dVal              .Write()
            self.flightDistance3dSig              .Write()
            self.flightDistance3dVal              .Write()
            self.chargedHadronMultiplicity        .Write()
            self.chargedHadronEnergyFraction      .Write()
            self.chMult                           .Write()
            self.chHadEF                          .Write()
            self.chEmEF                           .Write()
            self.partonFlavour                           .Write()
            self.hadronFlavour                           .Write()
    
            self.nTrk.Write()
            self.trackHists.Write()
    
    
        outFile.cd()
